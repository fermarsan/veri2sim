Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> module
Rule 1     module -> MODULE IDENTIFIER LPAREN port_list RPAREN SEMI module_items ENDMODULE
Rule 2     port_list -> port
Rule 3     port_list -> port_list COMMA port
Rule 4     port -> INPUT range_opt IDENTIFIER
Rule 5     port -> OUTPUT range_opt IDENTIFIER
Rule 6     port -> range_opt IDENTIFIER
Rule 7     range_opt -> LSQUARE NUMBER COLON NUMBER RSQUARE
Rule 8     range_opt -> empty
Rule 9     empty -> <empty>
Rule 10    module_items -> module_item
Rule 11    module_items -> module_items module_item
Rule 12    module_item -> wire_declaration
Rule 13    module_item -> identifier_definition
Rule 14    module_item -> assign_block
Rule 15    module_item -> always_block
Rule 16    module_item -> empty
Rule 17    identifier_definition -> INPUT identifier_list SEMI
Rule 18    identifier_definition -> OUTPUT identifier_list SEMI
Rule 19    identifier_list -> IDENTIFIER
Rule 20    identifier_list -> identifier_list COMMA IDENTIFIER
Rule 21    wire_declaration -> WIRE range_opt IDENTIFIER SEMI
Rule 22    assign_block -> ASSIGN assignment SEMI
Rule 23    assignment -> IDENTIFIER EQ expression
Rule 24    expression -> expression PLUS expression
Rule 25    expression -> expression MINUS expression
Rule 26    expression -> expression TIMES expression
Rule 27    expression -> expression DIVIDE expression
Rule 28    expression -> expression AND expression
Rule 29    expression -> expression OR expression
Rule 30    expression -> expression EQEQ expression
Rule 31    expression -> expression NEQ expression
Rule 32    expression -> expression LT expression
Rule 33    expression -> expression LE expression
Rule 34    expression -> expression GT expression
Rule 35    expression -> expression GE expression
Rule 36    expression -> expression BITAND expression
Rule 37    expression -> expression BITOR expression
Rule 38    expression -> expression BITXOR expression
Rule 39    expression -> expression LSHIFT expression
Rule 40    expression -> expression RSHIFT expression
Rule 41    expression -> MINUS expression
Rule 42    expression -> NOT expression
Rule 43    expression -> BITNOT expression
Rule 44    expression -> LPAREN expression RPAREN
Rule 45    expression -> NUMBER
Rule 46    expression -> IDENTIFIER
Rule 47    always_block -> ALWAYS AT sensitivity_list statement_block
Rule 48    sensitivity_list -> LPAREN sensitivity_items RPAREN
Rule 49    sensitivity_items -> IDENTIFIER
Rule 50    sensitivity_items -> sensitivity_items OR_KW IDENTIFIER
Rule 51    statement_block -> BEGIN statement_list END
Rule 52    statement_list -> statement
Rule 53    statement_list -> statement_list statement
Rule 54    statement -> assignment SEMI
Rule 55    statement -> empty

Terminals, with rules where they appear

ALWAYS               : 47
AND                  : 28
ASSIGN               : 22
AT                   : 47
BEGIN                : 51
BITAND               : 36
BITNOT               : 43
BITOR                : 37
BITXOR               : 38
COLON                : 7
COMMA                : 3 20
DIVIDE               : 27
END                  : 51
ENDMODULE            : 1
EQ                   : 23
EQEQ                 : 30
GE                   : 35
GT                   : 34
IDENTIFIER           : 1 4 5 6 19 20 21 23 46 49 50
INPUT                : 4 17
LE                   : 33
LPAREN               : 1 44 48
LSHIFT               : 39
LSQUARE              : 7
LT                   : 32
MINUS                : 25 41
MODULE               : 1
NEQ                  : 31
NOT                  : 42
NUMBER               : 7 7 45
OR                   : 29
OR_KW                : 50
OUTPUT               : 5 18
PLUS                 : 24
RPAREN               : 1 44 48
RSHIFT               : 40
RSQUARE              : 7
SEMI                 : 1 17 18 21 22 54
TIMES                : 26
WIRE                 : 21
error                : 

Nonterminals, with rules where they appear

always_block         : 15
assign_block         : 14
assignment           : 22 54
empty                : 8 16 55
expression           : 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 42 43 44
identifier_definition : 13
identifier_list      : 17 18 20
module               : 0
module_item          : 10 11
module_items         : 1 11
port                 : 2 3
port_list            : 1 3
range_opt            : 4 5 6 21
sensitivity_items    : 48 50
sensitivity_list     : 47
statement            : 52 53
statement_block      : 47
statement_list       : 51 53
wire_declaration     : 12

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . MODULE IDENTIFIER LPAREN port_list RPAREN SEMI module_items ENDMODULE

    MODULE          shift and go to state 2

    module                         shift and go to state 1

state 1

    (0) S' -> module .



state 2

    (1) module -> MODULE . IDENTIFIER LPAREN port_list RPAREN SEMI module_items ENDMODULE

    IDENTIFIER      shift and go to state 3


state 3

    (1) module -> MODULE IDENTIFIER . LPAREN port_list RPAREN SEMI module_items ENDMODULE

    LPAREN          shift and go to state 4


state 4

    (1) module -> MODULE IDENTIFIER LPAREN . port_list RPAREN SEMI module_items ENDMODULE
    (2) port_list -> . port
    (3) port_list -> . port_list COMMA port
    (4) port -> . INPUT range_opt IDENTIFIER
    (5) port -> . OUTPUT range_opt IDENTIFIER
    (6) port -> . range_opt IDENTIFIER
    (7) range_opt -> . LSQUARE NUMBER COLON NUMBER RSQUARE
    (8) range_opt -> . empty
    (9) empty -> .

    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 9
    LSQUARE         shift and go to state 10
    IDENTIFIER      reduce using rule 9 (empty -> .)

    port_list                      shift and go to state 5
    port                           shift and go to state 6
    range_opt                      shift and go to state 8
    empty                          shift and go to state 11

state 5

    (1) module -> MODULE IDENTIFIER LPAREN port_list . RPAREN SEMI module_items ENDMODULE
    (3) port_list -> port_list . COMMA port

    RPAREN          shift and go to state 12
    COMMA           shift and go to state 13


state 6

    (2) port_list -> port .

    RPAREN          reduce using rule 2 (port_list -> port .)
    COMMA           reduce using rule 2 (port_list -> port .)


state 7

    (4) port -> INPUT . range_opt IDENTIFIER
    (7) range_opt -> . LSQUARE NUMBER COLON NUMBER RSQUARE
    (8) range_opt -> . empty
    (9) empty -> .

    LSQUARE         shift and go to state 10
    IDENTIFIER      reduce using rule 9 (empty -> .)

    range_opt                      shift and go to state 14
    empty                          shift and go to state 11

state 8

    (6) port -> range_opt . IDENTIFIER

    IDENTIFIER      shift and go to state 15


state 9

    (5) port -> OUTPUT . range_opt IDENTIFIER
    (7) range_opt -> . LSQUARE NUMBER COLON NUMBER RSQUARE
    (8) range_opt -> . empty
    (9) empty -> .

    LSQUARE         shift and go to state 10
    IDENTIFIER      reduce using rule 9 (empty -> .)

    range_opt                      shift and go to state 16
    empty                          shift and go to state 11

state 10

    (7) range_opt -> LSQUARE . NUMBER COLON NUMBER RSQUARE

    NUMBER          shift and go to state 17


state 11

    (8) range_opt -> empty .

    IDENTIFIER      reduce using rule 8 (range_opt -> empty .)


state 12

    (1) module -> MODULE IDENTIFIER LPAREN port_list RPAREN . SEMI module_items ENDMODULE

    SEMI            shift and go to state 18


state 13

    (3) port_list -> port_list COMMA . port
    (4) port -> . INPUT range_opt IDENTIFIER
    (5) port -> . OUTPUT range_opt IDENTIFIER
    (6) port -> . range_opt IDENTIFIER
    (7) range_opt -> . LSQUARE NUMBER COLON NUMBER RSQUARE
    (8) range_opt -> . empty
    (9) empty -> .

    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 9
    LSQUARE         shift and go to state 10
    IDENTIFIER      reduce using rule 9 (empty -> .)

    port                           shift and go to state 19
    range_opt                      shift and go to state 8
    empty                          shift and go to state 11

state 14

    (4) port -> INPUT range_opt . IDENTIFIER

    IDENTIFIER      shift and go to state 20


state 15

    (6) port -> range_opt IDENTIFIER .

    RPAREN          reduce using rule 6 (port -> range_opt IDENTIFIER .)
    COMMA           reduce using rule 6 (port -> range_opt IDENTIFIER .)


state 16

    (5) port -> OUTPUT range_opt . IDENTIFIER

    IDENTIFIER      shift and go to state 21


state 17

    (7) range_opt -> LSQUARE NUMBER . COLON NUMBER RSQUARE

    COLON           shift and go to state 22


state 18

    (1) module -> MODULE IDENTIFIER LPAREN port_list RPAREN SEMI . module_items ENDMODULE
    (10) module_items -> . module_item
    (11) module_items -> . module_items module_item
    (12) module_item -> . wire_declaration
    (13) module_item -> . identifier_definition
    (14) module_item -> . assign_block
    (15) module_item -> . always_block
    (16) module_item -> . empty
    (21) wire_declaration -> . WIRE range_opt IDENTIFIER SEMI
    (17) identifier_definition -> . INPUT identifier_list SEMI
    (18) identifier_definition -> . OUTPUT identifier_list SEMI
    (22) assign_block -> . ASSIGN assignment SEMI
    (47) always_block -> . ALWAYS AT sensitivity_list statement_block
    (9) empty -> .

  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
    WIRE            shift and go to state 30
    INPUT           shift and go to state 31
    OUTPUT          shift and go to state 32
    ASSIGN          shift and go to state 33
    ALWAYS          shift and go to state 34
    ENDMODULE       reduce using rule 9 (empty -> .)

  ! WIRE            [ reduce using rule 9 (empty -> .) ]
  ! INPUT           [ reduce using rule 9 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 9 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 9 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 9 (empty -> .) ]

    module_items                   shift and go to state 23
    module_item                    shift and go to state 24
    wire_declaration               shift and go to state 25
    identifier_definition          shift and go to state 26
    assign_block                   shift and go to state 27
    always_block                   shift and go to state 28
    empty                          shift and go to state 29

state 19

    (3) port_list -> port_list COMMA port .

    RPAREN          reduce using rule 3 (port_list -> port_list COMMA port .)
    COMMA           reduce using rule 3 (port_list -> port_list COMMA port .)


state 20

    (4) port -> INPUT range_opt IDENTIFIER .

    RPAREN          reduce using rule 4 (port -> INPUT range_opt IDENTIFIER .)
    COMMA           reduce using rule 4 (port -> INPUT range_opt IDENTIFIER .)


state 21

    (5) port -> OUTPUT range_opt IDENTIFIER .

    RPAREN          reduce using rule 5 (port -> OUTPUT range_opt IDENTIFIER .)
    COMMA           reduce using rule 5 (port -> OUTPUT range_opt IDENTIFIER .)


state 22

    (7) range_opt -> LSQUARE NUMBER COLON . NUMBER RSQUARE

    NUMBER          shift and go to state 35


state 23

    (1) module -> MODULE IDENTIFIER LPAREN port_list RPAREN SEMI module_items . ENDMODULE
    (11) module_items -> module_items . module_item
    (12) module_item -> . wire_declaration
    (13) module_item -> . identifier_definition
    (14) module_item -> . assign_block
    (15) module_item -> . always_block
    (16) module_item -> . empty
    (21) wire_declaration -> . WIRE range_opt IDENTIFIER SEMI
    (17) identifier_definition -> . INPUT identifier_list SEMI
    (18) identifier_definition -> . OUTPUT identifier_list SEMI
    (22) assign_block -> . ASSIGN assignment SEMI
    (47) always_block -> . ALWAYS AT sensitivity_list statement_block
    (9) empty -> .

  ! shift/reduce conflict for ENDMODULE resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
    ENDMODULE       shift and go to state 36
    WIRE            shift and go to state 30
    INPUT           shift and go to state 31
    OUTPUT          shift and go to state 32
    ASSIGN          shift and go to state 33
    ALWAYS          shift and go to state 34

  ! ENDMODULE       [ reduce using rule 9 (empty -> .) ]
  ! WIRE            [ reduce using rule 9 (empty -> .) ]
  ! INPUT           [ reduce using rule 9 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 9 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 9 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 9 (empty -> .) ]

    module_item                    shift and go to state 37
    wire_declaration               shift and go to state 25
    identifier_definition          shift and go to state 26
    assign_block                   shift and go to state 27
    always_block                   shift and go to state 28
    empty                          shift and go to state 29

state 24

    (10) module_items -> module_item .

    ENDMODULE       reduce using rule 10 (module_items -> module_item .)
    WIRE            reduce using rule 10 (module_items -> module_item .)
    INPUT           reduce using rule 10 (module_items -> module_item .)
    OUTPUT          reduce using rule 10 (module_items -> module_item .)
    ASSIGN          reduce using rule 10 (module_items -> module_item .)
    ALWAYS          reduce using rule 10 (module_items -> module_item .)


state 25

    (12) module_item -> wire_declaration .

    ENDMODULE       reduce using rule 12 (module_item -> wire_declaration .)
    WIRE            reduce using rule 12 (module_item -> wire_declaration .)
    INPUT           reduce using rule 12 (module_item -> wire_declaration .)
    OUTPUT          reduce using rule 12 (module_item -> wire_declaration .)
    ASSIGN          reduce using rule 12 (module_item -> wire_declaration .)
    ALWAYS          reduce using rule 12 (module_item -> wire_declaration .)


state 26

    (13) module_item -> identifier_definition .

    ENDMODULE       reduce using rule 13 (module_item -> identifier_definition .)
    WIRE            reduce using rule 13 (module_item -> identifier_definition .)
    INPUT           reduce using rule 13 (module_item -> identifier_definition .)
    OUTPUT          reduce using rule 13 (module_item -> identifier_definition .)
    ASSIGN          reduce using rule 13 (module_item -> identifier_definition .)
    ALWAYS          reduce using rule 13 (module_item -> identifier_definition .)


state 27

    (14) module_item -> assign_block .

    ENDMODULE       reduce using rule 14 (module_item -> assign_block .)
    WIRE            reduce using rule 14 (module_item -> assign_block .)
    INPUT           reduce using rule 14 (module_item -> assign_block .)
    OUTPUT          reduce using rule 14 (module_item -> assign_block .)
    ASSIGN          reduce using rule 14 (module_item -> assign_block .)
    ALWAYS          reduce using rule 14 (module_item -> assign_block .)


state 28

    (15) module_item -> always_block .

    ENDMODULE       reduce using rule 15 (module_item -> always_block .)
    WIRE            reduce using rule 15 (module_item -> always_block .)
    INPUT           reduce using rule 15 (module_item -> always_block .)
    OUTPUT          reduce using rule 15 (module_item -> always_block .)
    ASSIGN          reduce using rule 15 (module_item -> always_block .)
    ALWAYS          reduce using rule 15 (module_item -> always_block .)


state 29

    (16) module_item -> empty .

    ENDMODULE       reduce using rule 16 (module_item -> empty .)
    WIRE            reduce using rule 16 (module_item -> empty .)
    INPUT           reduce using rule 16 (module_item -> empty .)
    OUTPUT          reduce using rule 16 (module_item -> empty .)
    ASSIGN          reduce using rule 16 (module_item -> empty .)
    ALWAYS          reduce using rule 16 (module_item -> empty .)


state 30

    (21) wire_declaration -> WIRE . range_opt IDENTIFIER SEMI
    (7) range_opt -> . LSQUARE NUMBER COLON NUMBER RSQUARE
    (8) range_opt -> . empty
    (9) empty -> .

    LSQUARE         shift and go to state 10
    IDENTIFIER      reduce using rule 9 (empty -> .)

    range_opt                      shift and go to state 38
    empty                          shift and go to state 11

state 31

    (17) identifier_definition -> INPUT . identifier_list SEMI
    (19) identifier_list -> . IDENTIFIER
    (20) identifier_list -> . identifier_list COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 40

    identifier_list                shift and go to state 39

state 32

    (18) identifier_definition -> OUTPUT . identifier_list SEMI
    (19) identifier_list -> . IDENTIFIER
    (20) identifier_list -> . identifier_list COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 40

    identifier_list                shift and go to state 41

state 33

    (22) assign_block -> ASSIGN . assignment SEMI
    (23) assignment -> . IDENTIFIER EQ expression

    IDENTIFIER      shift and go to state 43

    assignment                     shift and go to state 42

state 34

    (47) always_block -> ALWAYS . AT sensitivity_list statement_block

    AT              shift and go to state 44


state 35

    (7) range_opt -> LSQUARE NUMBER COLON NUMBER . RSQUARE

    RSQUARE         shift and go to state 45


state 36

    (1) module -> MODULE IDENTIFIER LPAREN port_list RPAREN SEMI module_items ENDMODULE .

    $end            reduce using rule 1 (module -> MODULE IDENTIFIER LPAREN port_list RPAREN SEMI module_items ENDMODULE .)


state 37

    (11) module_items -> module_items module_item .

    ENDMODULE       reduce using rule 11 (module_items -> module_items module_item .)
    WIRE            reduce using rule 11 (module_items -> module_items module_item .)
    INPUT           reduce using rule 11 (module_items -> module_items module_item .)
    OUTPUT          reduce using rule 11 (module_items -> module_items module_item .)
    ASSIGN          reduce using rule 11 (module_items -> module_items module_item .)
    ALWAYS          reduce using rule 11 (module_items -> module_items module_item .)


state 38

    (21) wire_declaration -> WIRE range_opt . IDENTIFIER SEMI

    IDENTIFIER      shift and go to state 46


state 39

    (17) identifier_definition -> INPUT identifier_list . SEMI
    (20) identifier_list -> identifier_list . COMMA IDENTIFIER

    SEMI            shift and go to state 47
    COMMA           shift and go to state 48


state 40

    (19) identifier_list -> IDENTIFIER .

    SEMI            reduce using rule 19 (identifier_list -> IDENTIFIER .)
    COMMA           reduce using rule 19 (identifier_list -> IDENTIFIER .)


state 41

    (18) identifier_definition -> OUTPUT identifier_list . SEMI
    (20) identifier_list -> identifier_list . COMMA IDENTIFIER

    SEMI            shift and go to state 49
    COMMA           shift and go to state 48


state 42

    (22) assign_block -> ASSIGN assignment . SEMI

    SEMI            shift and go to state 50


state 43

    (23) assignment -> IDENTIFIER . EQ expression

    EQ              shift and go to state 51


state 44

    (47) always_block -> ALWAYS AT . sensitivity_list statement_block
    (48) sensitivity_list -> . LPAREN sensitivity_items RPAREN

    LPAREN          shift and go to state 53

    sensitivity_list               shift and go to state 52

state 45

    (7) range_opt -> LSQUARE NUMBER COLON NUMBER RSQUARE .

    IDENTIFIER      reduce using rule 7 (range_opt -> LSQUARE NUMBER COLON NUMBER RSQUARE .)


state 46

    (21) wire_declaration -> WIRE range_opt IDENTIFIER . SEMI

    SEMI            shift and go to state 54


state 47

    (17) identifier_definition -> INPUT identifier_list SEMI .

    ENDMODULE       reduce using rule 17 (identifier_definition -> INPUT identifier_list SEMI .)
    WIRE            reduce using rule 17 (identifier_definition -> INPUT identifier_list SEMI .)
    INPUT           reduce using rule 17 (identifier_definition -> INPUT identifier_list SEMI .)
    OUTPUT          reduce using rule 17 (identifier_definition -> INPUT identifier_list SEMI .)
    ASSIGN          reduce using rule 17 (identifier_definition -> INPUT identifier_list SEMI .)
    ALWAYS          reduce using rule 17 (identifier_definition -> INPUT identifier_list SEMI .)


state 48

    (20) identifier_list -> identifier_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 55


state 49

    (18) identifier_definition -> OUTPUT identifier_list SEMI .

    ENDMODULE       reduce using rule 18 (identifier_definition -> OUTPUT identifier_list SEMI .)
    WIRE            reduce using rule 18 (identifier_definition -> OUTPUT identifier_list SEMI .)
    INPUT           reduce using rule 18 (identifier_definition -> OUTPUT identifier_list SEMI .)
    OUTPUT          reduce using rule 18 (identifier_definition -> OUTPUT identifier_list SEMI .)
    ASSIGN          reduce using rule 18 (identifier_definition -> OUTPUT identifier_list SEMI .)
    ALWAYS          reduce using rule 18 (identifier_definition -> OUTPUT identifier_list SEMI .)


state 50

    (22) assign_block -> ASSIGN assignment SEMI .

    ENDMODULE       reduce using rule 22 (assign_block -> ASSIGN assignment SEMI .)
    WIRE            reduce using rule 22 (assign_block -> ASSIGN assignment SEMI .)
    INPUT           reduce using rule 22 (assign_block -> ASSIGN assignment SEMI .)
    OUTPUT          reduce using rule 22 (assign_block -> ASSIGN assignment SEMI .)
    ASSIGN          reduce using rule 22 (assign_block -> ASSIGN assignment SEMI .)
    ALWAYS          reduce using rule 22 (assign_block -> ASSIGN assignment SEMI .)


state 51

    (23) assignment -> IDENTIFIER EQ . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 57

state 52

    (47) always_block -> ALWAYS AT sensitivity_list . statement_block
    (51) statement_block -> . BEGIN statement_list END

    BEGIN           shift and go to state 64

    statement_block                shift and go to state 63

state 53

    (48) sensitivity_list -> LPAREN . sensitivity_items RPAREN
    (49) sensitivity_items -> . IDENTIFIER
    (50) sensitivity_items -> . sensitivity_items OR_KW IDENTIFIER

    IDENTIFIER      shift and go to state 66

    sensitivity_items              shift and go to state 65

state 54

    (21) wire_declaration -> WIRE range_opt IDENTIFIER SEMI .

    ENDMODULE       reduce using rule 21 (wire_declaration -> WIRE range_opt IDENTIFIER SEMI .)
    WIRE            reduce using rule 21 (wire_declaration -> WIRE range_opt IDENTIFIER SEMI .)
    INPUT           reduce using rule 21 (wire_declaration -> WIRE range_opt IDENTIFIER SEMI .)
    OUTPUT          reduce using rule 21 (wire_declaration -> WIRE range_opt IDENTIFIER SEMI .)
    ASSIGN          reduce using rule 21 (wire_declaration -> WIRE range_opt IDENTIFIER SEMI .)
    ALWAYS          reduce using rule 21 (wire_declaration -> WIRE range_opt IDENTIFIER SEMI .)


state 55

    (20) identifier_list -> identifier_list COMMA IDENTIFIER .

    SEMI            reduce using rule 20 (identifier_list -> identifier_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 20 (identifier_list -> identifier_list COMMA IDENTIFIER .)


state 56

    (46) expression -> IDENTIFIER .

    PLUS            reduce using rule 46 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 46 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 46 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 46 (expression -> IDENTIFIER .)
    AND             reduce using rule 46 (expression -> IDENTIFIER .)
    OR              reduce using rule 46 (expression -> IDENTIFIER .)
    EQEQ            reduce using rule 46 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 46 (expression -> IDENTIFIER .)
    LT              reduce using rule 46 (expression -> IDENTIFIER .)
    LE              reduce using rule 46 (expression -> IDENTIFIER .)
    GT              reduce using rule 46 (expression -> IDENTIFIER .)
    GE              reduce using rule 46 (expression -> IDENTIFIER .)
    BITAND          reduce using rule 46 (expression -> IDENTIFIER .)
    BITOR           reduce using rule 46 (expression -> IDENTIFIER .)
    BITXOR          reduce using rule 46 (expression -> IDENTIFIER .)
    LSHIFT          reduce using rule 46 (expression -> IDENTIFIER .)
    RSHIFT          reduce using rule 46 (expression -> IDENTIFIER .)
    SEMI            reduce using rule 46 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 46 (expression -> IDENTIFIER .)


state 57

    (23) assignment -> IDENTIFIER EQ expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    SEMI            reduce using rule 23 (assignment -> IDENTIFIER EQ expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    EQEQ            shift and go to state 73
    NEQ             shift and go to state 74
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83


state 58

    (41) expression -> MINUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 84

state 59

    (42) expression -> NOT . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 85

state 60

    (43) expression -> BITNOT . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 86

state 61

    (44) expression -> LPAREN . expression RPAREN
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 87

state 62

    (45) expression -> NUMBER .

    PLUS            reduce using rule 45 (expression -> NUMBER .)
    MINUS           reduce using rule 45 (expression -> NUMBER .)
    TIMES           reduce using rule 45 (expression -> NUMBER .)
    DIVIDE          reduce using rule 45 (expression -> NUMBER .)
    AND             reduce using rule 45 (expression -> NUMBER .)
    OR              reduce using rule 45 (expression -> NUMBER .)
    EQEQ            reduce using rule 45 (expression -> NUMBER .)
    NEQ             reduce using rule 45 (expression -> NUMBER .)
    LT              reduce using rule 45 (expression -> NUMBER .)
    LE              reduce using rule 45 (expression -> NUMBER .)
    GT              reduce using rule 45 (expression -> NUMBER .)
    GE              reduce using rule 45 (expression -> NUMBER .)
    BITAND          reduce using rule 45 (expression -> NUMBER .)
    BITOR           reduce using rule 45 (expression -> NUMBER .)
    BITXOR          reduce using rule 45 (expression -> NUMBER .)
    LSHIFT          reduce using rule 45 (expression -> NUMBER .)
    RSHIFT          reduce using rule 45 (expression -> NUMBER .)
    SEMI            reduce using rule 45 (expression -> NUMBER .)
    RPAREN          reduce using rule 45 (expression -> NUMBER .)


state 63

    (47) always_block -> ALWAYS AT sensitivity_list statement_block .

    ENDMODULE       reduce using rule 47 (always_block -> ALWAYS AT sensitivity_list statement_block .)
    WIRE            reduce using rule 47 (always_block -> ALWAYS AT sensitivity_list statement_block .)
    INPUT           reduce using rule 47 (always_block -> ALWAYS AT sensitivity_list statement_block .)
    OUTPUT          reduce using rule 47 (always_block -> ALWAYS AT sensitivity_list statement_block .)
    ASSIGN          reduce using rule 47 (always_block -> ALWAYS AT sensitivity_list statement_block .)
    ALWAYS          reduce using rule 47 (always_block -> ALWAYS AT sensitivity_list statement_block .)


state 64

    (51) statement_block -> BEGIN . statement_list END
    (52) statement_list -> . statement
    (53) statement_list -> . statement_list statement
    (54) statement -> . assignment SEMI
    (55) statement -> . empty
    (23) assignment -> . IDENTIFIER EQ expression
    (9) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 43
    END             reduce using rule 9 (empty -> .)

  ! IDENTIFIER      [ reduce using rule 9 (empty -> .) ]

    statement_list                 shift and go to state 88
    statement                      shift and go to state 89
    assignment                     shift and go to state 90
    empty                          shift and go to state 91

state 65

    (48) sensitivity_list -> LPAREN sensitivity_items . RPAREN
    (50) sensitivity_items -> sensitivity_items . OR_KW IDENTIFIER

    RPAREN          shift and go to state 92
    OR_KW           shift and go to state 93


state 66

    (49) sensitivity_items -> IDENTIFIER .

    RPAREN          reduce using rule 49 (sensitivity_items -> IDENTIFIER .)
    OR_KW           reduce using rule 49 (sensitivity_items -> IDENTIFIER .)


state 67

    (24) expression -> expression PLUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 94

state 68

    (25) expression -> expression MINUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 95

state 69

    (26) expression -> expression TIMES . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 96

state 70

    (27) expression -> expression DIVIDE . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 97

state 71

    (28) expression -> expression AND . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 98

state 72

    (29) expression -> expression OR . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 99

state 73

    (30) expression -> expression EQEQ . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 100

state 74

    (31) expression -> expression NEQ . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 101

state 75

    (32) expression -> expression LT . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 102

state 76

    (33) expression -> expression LE . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 103

state 77

    (34) expression -> expression GT . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 104

state 78

    (35) expression -> expression GE . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 105

state 79

    (36) expression -> expression BITAND . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 106

state 80

    (37) expression -> expression BITOR . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 107

state 81

    (38) expression -> expression BITXOR . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 108

state 82

    (39) expression -> expression LSHIFT . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 109

state 83

    (40) expression -> expression RSHIFT . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (34) expression -> . expression GT expression
    (35) expression -> . expression GE expression
    (36) expression -> . expression BITAND expression
    (37) expression -> . expression BITOR expression
    (38) expression -> . expression BITXOR expression
    (39) expression -> . expression LSHIFT expression
    (40) expression -> . expression RSHIFT expression
    (41) expression -> . MINUS expression
    (42) expression -> . NOT expression
    (43) expression -> . BITNOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . IDENTIFIER

    MINUS           shift and go to state 58
    NOT             shift and go to state 59
    BITNOT          shift and go to state 60
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    IDENTIFIER      shift and go to state 56

    expression                     shift and go to state 110

state 84

    (41) expression -> MINUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 41 (expression -> MINUS expression .)
    MINUS           reduce using rule 41 (expression -> MINUS expression .)
    TIMES           reduce using rule 41 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 41 (expression -> MINUS expression .)
    AND             reduce using rule 41 (expression -> MINUS expression .)
    OR              reduce using rule 41 (expression -> MINUS expression .)
    EQEQ            reduce using rule 41 (expression -> MINUS expression .)
    NEQ             reduce using rule 41 (expression -> MINUS expression .)
    LT              reduce using rule 41 (expression -> MINUS expression .)
    LE              reduce using rule 41 (expression -> MINUS expression .)
    GT              reduce using rule 41 (expression -> MINUS expression .)
    GE              reduce using rule 41 (expression -> MINUS expression .)
    BITAND          reduce using rule 41 (expression -> MINUS expression .)
    BITOR           reduce using rule 41 (expression -> MINUS expression .)
    BITXOR          reduce using rule 41 (expression -> MINUS expression .)
    LSHIFT          reduce using rule 41 (expression -> MINUS expression .)
    RSHIFT          reduce using rule 41 (expression -> MINUS expression .)
    SEMI            reduce using rule 41 (expression -> MINUS expression .)
    RPAREN          reduce using rule 41 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]
  ! BITAND          [ shift and go to state 79 ]
  ! BITOR           [ shift and go to state 80 ]
  ! BITXOR          [ shift and go to state 81 ]
  ! LSHIFT          [ shift and go to state 82 ]
  ! RSHIFT          [ shift and go to state 83 ]


state 85

    (42) expression -> NOT expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 42 (expression -> NOT expression .)
    MINUS           reduce using rule 42 (expression -> NOT expression .)
    TIMES           reduce using rule 42 (expression -> NOT expression .)
    DIVIDE          reduce using rule 42 (expression -> NOT expression .)
    AND             reduce using rule 42 (expression -> NOT expression .)
    OR              reduce using rule 42 (expression -> NOT expression .)
    EQEQ            reduce using rule 42 (expression -> NOT expression .)
    NEQ             reduce using rule 42 (expression -> NOT expression .)
    LT              reduce using rule 42 (expression -> NOT expression .)
    LE              reduce using rule 42 (expression -> NOT expression .)
    GT              reduce using rule 42 (expression -> NOT expression .)
    GE              reduce using rule 42 (expression -> NOT expression .)
    BITAND          reduce using rule 42 (expression -> NOT expression .)
    BITOR           reduce using rule 42 (expression -> NOT expression .)
    BITXOR          reduce using rule 42 (expression -> NOT expression .)
    LSHIFT          reduce using rule 42 (expression -> NOT expression .)
    RSHIFT          reduce using rule 42 (expression -> NOT expression .)
    SEMI            reduce using rule 42 (expression -> NOT expression .)
    RPAREN          reduce using rule 42 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]
  ! BITAND          [ shift and go to state 79 ]
  ! BITOR           [ shift and go to state 80 ]
  ! BITXOR          [ shift and go to state 81 ]
  ! LSHIFT          [ shift and go to state 82 ]
  ! RSHIFT          [ shift and go to state 83 ]


state 86

    (43) expression -> BITNOT expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 43 (expression -> BITNOT expression .)
    MINUS           reduce using rule 43 (expression -> BITNOT expression .)
    TIMES           reduce using rule 43 (expression -> BITNOT expression .)
    DIVIDE          reduce using rule 43 (expression -> BITNOT expression .)
    AND             reduce using rule 43 (expression -> BITNOT expression .)
    OR              reduce using rule 43 (expression -> BITNOT expression .)
    EQEQ            reduce using rule 43 (expression -> BITNOT expression .)
    NEQ             reduce using rule 43 (expression -> BITNOT expression .)
    LT              reduce using rule 43 (expression -> BITNOT expression .)
    LE              reduce using rule 43 (expression -> BITNOT expression .)
    GT              reduce using rule 43 (expression -> BITNOT expression .)
    GE              reduce using rule 43 (expression -> BITNOT expression .)
    BITAND          reduce using rule 43 (expression -> BITNOT expression .)
    BITOR           reduce using rule 43 (expression -> BITNOT expression .)
    BITXOR          reduce using rule 43 (expression -> BITNOT expression .)
    LSHIFT          reduce using rule 43 (expression -> BITNOT expression .)
    RSHIFT          reduce using rule 43 (expression -> BITNOT expression .)
    SEMI            reduce using rule 43 (expression -> BITNOT expression .)
    RPAREN          reduce using rule 43 (expression -> BITNOT expression .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]
  ! BITAND          [ shift and go to state 79 ]
  ! BITOR           [ shift and go to state 80 ]
  ! BITXOR          [ shift and go to state 81 ]
  ! LSHIFT          [ shift and go to state 82 ]
  ! RSHIFT          [ shift and go to state 83 ]


state 87

    (44) expression -> LPAREN expression . RPAREN
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    EQEQ            shift and go to state 73
    NEQ             shift and go to state 74
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83


state 88

    (51) statement_block -> BEGIN statement_list . END
    (53) statement_list -> statement_list . statement
    (54) statement -> . assignment SEMI
    (55) statement -> . empty
    (23) assignment -> . IDENTIFIER EQ expression
    (9) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    END             shift and go to state 112
    IDENTIFIER      shift and go to state 43

  ! END             [ reduce using rule 9 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 9 (empty -> .) ]

    statement                      shift and go to state 113
    assignment                     shift and go to state 90
    empty                          shift and go to state 91

state 89

    (52) statement_list -> statement .

    END             reduce using rule 52 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 52 (statement_list -> statement .)


state 90

    (54) statement -> assignment . SEMI

    SEMI            shift and go to state 114


state 91

    (55) statement -> empty .

    END             reduce using rule 55 (statement -> empty .)
    IDENTIFIER      reduce using rule 55 (statement -> empty .)


state 92

    (48) sensitivity_list -> LPAREN sensitivity_items RPAREN .

    BEGIN           reduce using rule 48 (sensitivity_list -> LPAREN sensitivity_items RPAREN .)


state 93

    (50) sensitivity_items -> sensitivity_items OR_KW . IDENTIFIER

    IDENTIFIER      shift and go to state 115


state 94

    (24) expression -> expression PLUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 24 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 24 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 24 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    EQEQ            shift and go to state 73
    NEQ             shift and go to state 74
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! TIMES           [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! EQEQ            [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! NEQ             [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! BITAND          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! BITOR           [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! BITXOR          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! LSHIFT          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! RSHIFT          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]


state 95

    (25) expression -> expression MINUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 25 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 25 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 25 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    EQEQ            shift and go to state 73
    NEQ             shift and go to state 74
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! TIMES           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! EQEQ            [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! NEQ             [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! BITAND          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! BITOR           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! BITXOR          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LSHIFT          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! RSHIFT          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]


state 96

    (26) expression -> expression TIMES expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 26 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 26 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 26 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 26 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 26 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 26 (expression -> expression TIMES expression .)
    AND             shift and go to state 71
    OR              shift and go to state 72
    EQEQ            shift and go to state 73
    NEQ             shift and go to state 74
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! AND             [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! EQEQ            [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! NEQ             [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! BITAND          [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! BITOR           [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! BITXOR          [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! LSHIFT          [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! RSHIFT          [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]


state 97

    (27) expression -> expression DIVIDE expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 27 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 27 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 27 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 27 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 27 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 27 (expression -> expression DIVIDE expression .)
    AND             shift and go to state 71
    OR              shift and go to state 72
    EQEQ            shift and go to state 73
    NEQ             shift and go to state 74
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! AND             [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! EQEQ            [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! NEQ             [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! LE              [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! GE              [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! BITAND          [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! BITOR           [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! BITXOR          [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! LSHIFT          [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! RSHIFT          [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]


state 98

    (28) expression -> expression AND expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 28 (expression -> expression AND expression .)
    MINUS           reduce using rule 28 (expression -> expression AND expression .)
    TIMES           reduce using rule 28 (expression -> expression AND expression .)
    DIVIDE          reduce using rule 28 (expression -> expression AND expression .)
    AND             reduce using rule 28 (expression -> expression AND expression .)
    OR              reduce using rule 28 (expression -> expression AND expression .)
    SEMI            reduce using rule 28 (expression -> expression AND expression .)
    RPAREN          reduce using rule 28 (expression -> expression AND expression .)
    EQEQ            shift and go to state 73
    NEQ             shift and go to state 74
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! EQEQ            [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! BITAND          [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! BITOR           [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! BITXOR          [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! LSHIFT          [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! RSHIFT          [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]


state 99

    (29) expression -> expression OR expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 29 (expression -> expression OR expression .)
    MINUS           reduce using rule 29 (expression -> expression OR expression .)
    TIMES           reduce using rule 29 (expression -> expression OR expression .)
    DIVIDE          reduce using rule 29 (expression -> expression OR expression .)
    AND             reduce using rule 29 (expression -> expression OR expression .)
    OR              reduce using rule 29 (expression -> expression OR expression .)
    SEMI            reduce using rule 29 (expression -> expression OR expression .)
    RPAREN          reduce using rule 29 (expression -> expression OR expression .)
    EQEQ            shift and go to state 73
    NEQ             shift and go to state 74
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! EQEQ            [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! BITAND          [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! BITOR           [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! BITXOR          [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! LSHIFT          [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! RSHIFT          [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]


state 100

    (30) expression -> expression EQEQ expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 30 (expression -> expression EQEQ expression .)
    MINUS           reduce using rule 30 (expression -> expression EQEQ expression .)
    TIMES           reduce using rule 30 (expression -> expression EQEQ expression .)
    DIVIDE          reduce using rule 30 (expression -> expression EQEQ expression .)
    AND             reduce using rule 30 (expression -> expression EQEQ expression .)
    OR              reduce using rule 30 (expression -> expression EQEQ expression .)
    EQEQ            reduce using rule 30 (expression -> expression EQEQ expression .)
    NEQ             reduce using rule 30 (expression -> expression EQEQ expression .)
    SEMI            reduce using rule 30 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 30 (expression -> expression EQEQ expression .)
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! LT              [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! LE              [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! GT              [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! GE              [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! BITAND          [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! BITOR           [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! BITXOR          [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! LSHIFT          [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! RSHIFT          [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]


state 101

    (31) expression -> expression NEQ expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 31 (expression -> expression NEQ expression .)
    MINUS           reduce using rule 31 (expression -> expression NEQ expression .)
    TIMES           reduce using rule 31 (expression -> expression NEQ expression .)
    DIVIDE          reduce using rule 31 (expression -> expression NEQ expression .)
    AND             reduce using rule 31 (expression -> expression NEQ expression .)
    OR              reduce using rule 31 (expression -> expression NEQ expression .)
    EQEQ            reduce using rule 31 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 31 (expression -> expression NEQ expression .)
    SEMI            reduce using rule 31 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 31 (expression -> expression NEQ expression .)
    LT              shift and go to state 75
    LE              shift and go to state 76
    GT              shift and go to state 77
    GE              shift and go to state 78
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! LT              [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! LE              [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! BITAND          [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! BITOR           [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! BITXOR          [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! LSHIFT          [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! RSHIFT          [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]


state 102

    (32) expression -> expression LT expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 32 (expression -> expression LT expression .)
    MINUS           reduce using rule 32 (expression -> expression LT expression .)
    TIMES           reduce using rule 32 (expression -> expression LT expression .)
    DIVIDE          reduce using rule 32 (expression -> expression LT expression .)
    AND             reduce using rule 32 (expression -> expression LT expression .)
    OR              reduce using rule 32 (expression -> expression LT expression .)
    EQEQ            reduce using rule 32 (expression -> expression LT expression .)
    NEQ             reduce using rule 32 (expression -> expression LT expression .)
    LT              reduce using rule 32 (expression -> expression LT expression .)
    LE              reduce using rule 32 (expression -> expression LT expression .)
    GT              reduce using rule 32 (expression -> expression LT expression .)
    GE              reduce using rule 32 (expression -> expression LT expression .)
    SEMI            reduce using rule 32 (expression -> expression LT expression .)
    RPAREN          reduce using rule 32 (expression -> expression LT expression .)
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! BITAND          [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! BITOR           [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! BITXOR          [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! LSHIFT          [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! RSHIFT          [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]


state 103

    (33) expression -> expression LE expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 33 (expression -> expression LE expression .)
    MINUS           reduce using rule 33 (expression -> expression LE expression .)
    TIMES           reduce using rule 33 (expression -> expression LE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression LE expression .)
    AND             reduce using rule 33 (expression -> expression LE expression .)
    OR              reduce using rule 33 (expression -> expression LE expression .)
    EQEQ            reduce using rule 33 (expression -> expression LE expression .)
    NEQ             reduce using rule 33 (expression -> expression LE expression .)
    LT              reduce using rule 33 (expression -> expression LE expression .)
    LE              reduce using rule 33 (expression -> expression LE expression .)
    GT              reduce using rule 33 (expression -> expression LE expression .)
    GE              reduce using rule 33 (expression -> expression LE expression .)
    SEMI            reduce using rule 33 (expression -> expression LE expression .)
    RPAREN          reduce using rule 33 (expression -> expression LE expression .)
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! BITAND          [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! BITOR           [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! BITXOR          [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! LSHIFT          [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! RSHIFT          [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]


state 104

    (34) expression -> expression GT expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 34 (expression -> expression GT expression .)
    MINUS           reduce using rule 34 (expression -> expression GT expression .)
    TIMES           reduce using rule 34 (expression -> expression GT expression .)
    DIVIDE          reduce using rule 34 (expression -> expression GT expression .)
    AND             reduce using rule 34 (expression -> expression GT expression .)
    OR              reduce using rule 34 (expression -> expression GT expression .)
    EQEQ            reduce using rule 34 (expression -> expression GT expression .)
    NEQ             reduce using rule 34 (expression -> expression GT expression .)
    LT              reduce using rule 34 (expression -> expression GT expression .)
    LE              reduce using rule 34 (expression -> expression GT expression .)
    GT              reduce using rule 34 (expression -> expression GT expression .)
    GE              reduce using rule 34 (expression -> expression GT expression .)
    SEMI            reduce using rule 34 (expression -> expression GT expression .)
    RPAREN          reduce using rule 34 (expression -> expression GT expression .)
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! BITAND          [ reduce using rule 34 (expression -> expression GT expression .) ]
  ! BITOR           [ reduce using rule 34 (expression -> expression GT expression .) ]
  ! BITXOR          [ reduce using rule 34 (expression -> expression GT expression .) ]
  ! LSHIFT          [ reduce using rule 34 (expression -> expression GT expression .) ]
  ! RSHIFT          [ reduce using rule 34 (expression -> expression GT expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]


state 105

    (35) expression -> expression GE expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 35 (expression -> expression GE expression .)
    MINUS           reduce using rule 35 (expression -> expression GE expression .)
    TIMES           reduce using rule 35 (expression -> expression GE expression .)
    DIVIDE          reduce using rule 35 (expression -> expression GE expression .)
    AND             reduce using rule 35 (expression -> expression GE expression .)
    OR              reduce using rule 35 (expression -> expression GE expression .)
    EQEQ            reduce using rule 35 (expression -> expression GE expression .)
    NEQ             reduce using rule 35 (expression -> expression GE expression .)
    LT              reduce using rule 35 (expression -> expression GE expression .)
    LE              reduce using rule 35 (expression -> expression GE expression .)
    GT              reduce using rule 35 (expression -> expression GE expression .)
    GE              reduce using rule 35 (expression -> expression GE expression .)
    SEMI            reduce using rule 35 (expression -> expression GE expression .)
    RPAREN          reduce using rule 35 (expression -> expression GE expression .)
    BITAND          shift and go to state 79
    BITOR           shift and go to state 80
    BITXOR          shift and go to state 81
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! BITAND          [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! BITOR           [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! BITXOR          [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! LSHIFT          [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! RSHIFT          [ reduce using rule 35 (expression -> expression GE expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]


state 106

    (36) expression -> expression BITAND expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 36 (expression -> expression BITAND expression .)
    MINUS           reduce using rule 36 (expression -> expression BITAND expression .)
    TIMES           reduce using rule 36 (expression -> expression BITAND expression .)
    DIVIDE          reduce using rule 36 (expression -> expression BITAND expression .)
    AND             reduce using rule 36 (expression -> expression BITAND expression .)
    OR              reduce using rule 36 (expression -> expression BITAND expression .)
    EQEQ            reduce using rule 36 (expression -> expression BITAND expression .)
    NEQ             reduce using rule 36 (expression -> expression BITAND expression .)
    LT              reduce using rule 36 (expression -> expression BITAND expression .)
    LE              reduce using rule 36 (expression -> expression BITAND expression .)
    GT              reduce using rule 36 (expression -> expression BITAND expression .)
    GE              reduce using rule 36 (expression -> expression BITAND expression .)
    BITAND          reduce using rule 36 (expression -> expression BITAND expression .)
    BITOR           reduce using rule 36 (expression -> expression BITAND expression .)
    BITXOR          reduce using rule 36 (expression -> expression BITAND expression .)
    SEMI            reduce using rule 36 (expression -> expression BITAND expression .)
    RPAREN          reduce using rule 36 (expression -> expression BITAND expression .)
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! LSHIFT          [ reduce using rule 36 (expression -> expression BITAND expression .) ]
  ! RSHIFT          [ reduce using rule 36 (expression -> expression BITAND expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]
  ! BITAND          [ shift and go to state 79 ]
  ! BITOR           [ shift and go to state 80 ]
  ! BITXOR          [ shift and go to state 81 ]


state 107

    (37) expression -> expression BITOR expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 37 (expression -> expression BITOR expression .)
    MINUS           reduce using rule 37 (expression -> expression BITOR expression .)
    TIMES           reduce using rule 37 (expression -> expression BITOR expression .)
    DIVIDE          reduce using rule 37 (expression -> expression BITOR expression .)
    AND             reduce using rule 37 (expression -> expression BITOR expression .)
    OR              reduce using rule 37 (expression -> expression BITOR expression .)
    EQEQ            reduce using rule 37 (expression -> expression BITOR expression .)
    NEQ             reduce using rule 37 (expression -> expression BITOR expression .)
    LT              reduce using rule 37 (expression -> expression BITOR expression .)
    LE              reduce using rule 37 (expression -> expression BITOR expression .)
    GT              reduce using rule 37 (expression -> expression BITOR expression .)
    GE              reduce using rule 37 (expression -> expression BITOR expression .)
    BITAND          reduce using rule 37 (expression -> expression BITOR expression .)
    BITOR           reduce using rule 37 (expression -> expression BITOR expression .)
    BITXOR          reduce using rule 37 (expression -> expression BITOR expression .)
    SEMI            reduce using rule 37 (expression -> expression BITOR expression .)
    RPAREN          reduce using rule 37 (expression -> expression BITOR expression .)
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! LSHIFT          [ reduce using rule 37 (expression -> expression BITOR expression .) ]
  ! RSHIFT          [ reduce using rule 37 (expression -> expression BITOR expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]
  ! BITAND          [ shift and go to state 79 ]
  ! BITOR           [ shift and go to state 80 ]
  ! BITXOR          [ shift and go to state 81 ]


state 108

    (38) expression -> expression BITXOR expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 38 (expression -> expression BITXOR expression .)
    MINUS           reduce using rule 38 (expression -> expression BITXOR expression .)
    TIMES           reduce using rule 38 (expression -> expression BITXOR expression .)
    DIVIDE          reduce using rule 38 (expression -> expression BITXOR expression .)
    AND             reduce using rule 38 (expression -> expression BITXOR expression .)
    OR              reduce using rule 38 (expression -> expression BITXOR expression .)
    EQEQ            reduce using rule 38 (expression -> expression BITXOR expression .)
    NEQ             reduce using rule 38 (expression -> expression BITXOR expression .)
    LT              reduce using rule 38 (expression -> expression BITXOR expression .)
    LE              reduce using rule 38 (expression -> expression BITXOR expression .)
    GT              reduce using rule 38 (expression -> expression BITXOR expression .)
    GE              reduce using rule 38 (expression -> expression BITXOR expression .)
    BITAND          reduce using rule 38 (expression -> expression BITXOR expression .)
    BITOR           reduce using rule 38 (expression -> expression BITXOR expression .)
    BITXOR          reduce using rule 38 (expression -> expression BITXOR expression .)
    SEMI            reduce using rule 38 (expression -> expression BITXOR expression .)
    RPAREN          reduce using rule 38 (expression -> expression BITXOR expression .)
    LSHIFT          shift and go to state 82
    RSHIFT          shift and go to state 83

  ! LSHIFT          [ reduce using rule 38 (expression -> expression BITXOR expression .) ]
  ! RSHIFT          [ reduce using rule 38 (expression -> expression BITXOR expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]
  ! BITAND          [ shift and go to state 79 ]
  ! BITOR           [ shift and go to state 80 ]
  ! BITXOR          [ shift and go to state 81 ]


state 109

    (39) expression -> expression LSHIFT expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 39 (expression -> expression LSHIFT expression .)
    MINUS           reduce using rule 39 (expression -> expression LSHIFT expression .)
    TIMES           reduce using rule 39 (expression -> expression LSHIFT expression .)
    DIVIDE          reduce using rule 39 (expression -> expression LSHIFT expression .)
    AND             reduce using rule 39 (expression -> expression LSHIFT expression .)
    OR              reduce using rule 39 (expression -> expression LSHIFT expression .)
    EQEQ            reduce using rule 39 (expression -> expression LSHIFT expression .)
    NEQ             reduce using rule 39 (expression -> expression LSHIFT expression .)
    LT              reduce using rule 39 (expression -> expression LSHIFT expression .)
    LE              reduce using rule 39 (expression -> expression LSHIFT expression .)
    GT              reduce using rule 39 (expression -> expression LSHIFT expression .)
    GE              reduce using rule 39 (expression -> expression LSHIFT expression .)
    BITAND          reduce using rule 39 (expression -> expression LSHIFT expression .)
    BITOR           reduce using rule 39 (expression -> expression LSHIFT expression .)
    BITXOR          reduce using rule 39 (expression -> expression LSHIFT expression .)
    LSHIFT          reduce using rule 39 (expression -> expression LSHIFT expression .)
    RSHIFT          reduce using rule 39 (expression -> expression LSHIFT expression .)
    SEMI            reduce using rule 39 (expression -> expression LSHIFT expression .)
    RPAREN          reduce using rule 39 (expression -> expression LSHIFT expression .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]
  ! BITAND          [ shift and go to state 79 ]
  ! BITOR           [ shift and go to state 80 ]
  ! BITXOR          [ shift and go to state 81 ]
  ! LSHIFT          [ shift and go to state 82 ]
  ! RSHIFT          [ shift and go to state 83 ]


state 110

    (40) expression -> expression RSHIFT expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (34) expression -> expression . GT expression
    (35) expression -> expression . GE expression
    (36) expression -> expression . BITAND expression
    (37) expression -> expression . BITOR expression
    (38) expression -> expression . BITXOR expression
    (39) expression -> expression . LSHIFT expression
    (40) expression -> expression . RSHIFT expression

    PLUS            reduce using rule 40 (expression -> expression RSHIFT expression .)
    MINUS           reduce using rule 40 (expression -> expression RSHIFT expression .)
    TIMES           reduce using rule 40 (expression -> expression RSHIFT expression .)
    DIVIDE          reduce using rule 40 (expression -> expression RSHIFT expression .)
    AND             reduce using rule 40 (expression -> expression RSHIFT expression .)
    OR              reduce using rule 40 (expression -> expression RSHIFT expression .)
    EQEQ            reduce using rule 40 (expression -> expression RSHIFT expression .)
    NEQ             reduce using rule 40 (expression -> expression RSHIFT expression .)
    LT              reduce using rule 40 (expression -> expression RSHIFT expression .)
    LE              reduce using rule 40 (expression -> expression RSHIFT expression .)
    GT              reduce using rule 40 (expression -> expression RSHIFT expression .)
    GE              reduce using rule 40 (expression -> expression RSHIFT expression .)
    BITAND          reduce using rule 40 (expression -> expression RSHIFT expression .)
    BITOR           reduce using rule 40 (expression -> expression RSHIFT expression .)
    BITXOR          reduce using rule 40 (expression -> expression RSHIFT expression .)
    LSHIFT          reduce using rule 40 (expression -> expression RSHIFT expression .)
    RSHIFT          reduce using rule 40 (expression -> expression RSHIFT expression .)
    SEMI            reduce using rule 40 (expression -> expression RSHIFT expression .)
    RPAREN          reduce using rule 40 (expression -> expression RSHIFT expression .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! EQEQ            [ shift and go to state 73 ]
  ! NEQ             [ shift and go to state 74 ]
  ! LT              [ shift and go to state 75 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 77 ]
  ! GE              [ shift and go to state 78 ]
  ! BITAND          [ shift and go to state 79 ]
  ! BITOR           [ shift and go to state 80 ]
  ! BITXOR          [ shift and go to state 81 ]
  ! LSHIFT          [ shift and go to state 82 ]
  ! RSHIFT          [ shift and go to state 83 ]


state 111

    (44) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    BITAND          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    BITOR           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    BITXOR          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 44 (expression -> LPAREN expression RPAREN .)


state 112

    (51) statement_block -> BEGIN statement_list END .

    ENDMODULE       reduce using rule 51 (statement_block -> BEGIN statement_list END .)
    WIRE            reduce using rule 51 (statement_block -> BEGIN statement_list END .)
    INPUT           reduce using rule 51 (statement_block -> BEGIN statement_list END .)
    OUTPUT          reduce using rule 51 (statement_block -> BEGIN statement_list END .)
    ASSIGN          reduce using rule 51 (statement_block -> BEGIN statement_list END .)
    ALWAYS          reduce using rule 51 (statement_block -> BEGIN statement_list END .)


state 113

    (53) statement_list -> statement_list statement .

    END             reduce using rule 53 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 53 (statement_list -> statement_list statement .)


state 114

    (54) statement -> assignment SEMI .

    END             reduce using rule 54 (statement -> assignment SEMI .)
    IDENTIFIER      reduce using rule 54 (statement -> assignment SEMI .)


state 115

    (50) sensitivity_items -> sensitivity_items OR_KW IDENTIFIER .

    RPAREN          reduce using rule 50 (sensitivity_items -> sensitivity_items OR_KW IDENTIFIER .)
    OR_KW           reduce using rule 50 (sensitivity_items -> sensitivity_items OR_KW IDENTIFIER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for WIRE in state 18 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 18 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 18 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 18 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 18 resolved as shift
WARNING: shift/reduce conflict for ENDMODULE in state 23 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 23 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 23 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 23 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 23 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 23 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 64 resolved as shift
WARNING: shift/reduce conflict for END in state 88 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 88 resolved as shift
